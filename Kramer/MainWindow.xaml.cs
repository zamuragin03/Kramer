using System;using System.Collections.Generic;using System.Diagnostics;using System.IO;using System.Windows;using System.Windows.Controls;using System.Windows.Media;namespace Kramer{    /// <summary>    /// Interaction logic for MainWindow.xaml    /// </summary>    public partial class MainWindow : Window    {        private bool isWork = true;        public double[] arr = new double[12];        public List<TextBox> TextBoxes = new List<TextBox>();        public MainWindow()        {            InitializeComponent();            Answer.Content = "";            foreach (UIElement textbox in MainRoot.Children)            {                if (textbox is TextBox)                {                    TextBoxes.Add((TextBox)textbox);                }            }        }        private void Solve_OnClick(object sender, RoutedEventArgs e)        {            X1.Text = "";            X2.Text = "";            X3.Text = "";            isWork = true;            for (int i = 0; i < 12; i++)            {                try                {                    arr[i] = double.Parse(TextBoxes[i]?.Text);                }                catch (Exception ex)                {                    TextBoxes[i].Background = new SolidColorBrush(Colors.Crimson);                    MessageBox.Show($"Ошибка в {i+1} элементе \n {ex.Message.ToUpper()}", "Метод Крамера", MessageBoxButton.OK,                        MessageBoxImage.Information);                    TextBoxes[i].Background = new SolidColorBrush(Colors.PaleGreen);                    isWork = false;                }            }            if (isWork)            {                Kramer rk = new Kramer(arr);                double[] res = rk.Answer();                X1.Text = $"{res[0]:F}";                X2.Text = $"{res[1]:F}";                X3.Text = $"{res[2]:F}";                rk.Save();            }        }        private void OpenFile(object sender, RoutedEventArgs e)        {            var p = new Process();            p.StartInfo = new ProcessStartInfo("result.txt")            {                UseShellExecute = true            };            p.Start();        }        private void ResetCells(object sender, RoutedEventArgs e)        {            foreach (UIElement textbox in MainRoot.Children)            {                if (textbox is TextBox)                {                    ((TextBox) textbox).Text = "";                }            }        }    }}